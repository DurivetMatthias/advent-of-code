{"ast":null,"code":"var _jsxFileName = \"/Users/matthiasdurivet/Documents/advent-of-code/2022/14-viz/react-app/src/components/Atoms/EmptyCave.js\";\nimport { puzzleInputs } from \"../../utils/PuzzleInputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  Grid\n} = require(\"@mui/material\");\n\nconst createSquare = (width, height) => {\n  return new Array(height).fill().map(() => new Array(width).fill(\".\"));\n};\n\nconst EmptyCave = _ref => {\n  let {\n    version\n  } = _ref;\n  const parsed = puzzleInputs[14][version].split(\"\\n\").map(line => line.split(\" -> \").map(pos => pos.split(\",\").map(n => parseInt(n))).map(pos => ({\n    x: pos[0],\n    y: pos[1]\n  })));\n  return /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n\n_c = EmptyCave;\nexport default EmptyCave;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmptyCave\");","map":{"version":3,"names":["puzzleInputs","Grid","require","createSquare","width","height","Array","fill","map","EmptyCave","version","parsed","split","line","pos","n","parseInt","x","y"],"sources":["/Users/matthiasdurivet/Documents/advent-of-code/2022/14-viz/react-app/src/components/Atoms/EmptyCave.js"],"sourcesContent":["import { puzzleInputs } from \"../../utils/PuzzleInputs\"\n\nconst { Grid } = require(\"@mui/material\")\n\nconst createSquare = (width, height) => {\n    return new Array(height)\n        .fill()\n        .map(() => new Array(width).fill(\".\"))\n}\n\nconst EmptyCave = ({ version }) => {\n    const parsed = puzzleInputs[14][version].split(\"\\n\")\n        .map(line => line\n            .split(\" -> \")\n            .map(pos => pos\n                .split(\",\")\n                .map(n => parseInt(n))\n            )\n            .map(pos => ({ x: pos[0], y: pos[1] }))\n        )\n    return <Grid />\n}\n\nexport default EmptyCave\n"],"mappings":";AAAA,SAASA,YAAT,QAA6B,0BAA7B;;;AAEA,MAAM;EAAEC;AAAF,IAAWC,OAAO,CAAC,eAAD,CAAxB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACpC,OAAO,IAAIC,KAAJ,CAAUD,MAAV,EACFE,IADE,GAEFC,GAFE,CAEE,MAAM,IAAIF,KAAJ,CAAUF,KAAV,EAAiBG,IAAjB,CAAsB,GAAtB,CAFR,CAAP;AAGH,CAJD;;AAMA,MAAME,SAAS,GAAG,QAAiB;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC/B,MAAMC,MAAM,GAAGX,YAAY,CAAC,EAAD,CAAZ,CAAiBU,OAAjB,EAA0BE,KAA1B,CAAgC,IAAhC,EACVJ,GADU,CACNK,IAAI,IAAIA,IAAI,CACZD,KADQ,CACF,MADE,EAERJ,GAFQ,CAEJM,GAAG,IAAIA,GAAG,CACVF,KADO,CACD,GADC,EAEPJ,GAFO,CAEHO,CAAC,IAAIC,QAAQ,CAACD,CAAD,CAFV,CAFH,EAMRP,GANQ,CAMJM,GAAG,KAAK;IAAEG,CAAC,EAAEH,GAAG,CAAC,CAAD,CAAR;IAAaI,CAAC,EAAEJ,GAAG,CAAC,CAAD;EAAnB,CAAL,CANC,CADF,CAAf;EASA,oBAAO,QAAC,IAAD;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAXD;;KAAML,S;AAaN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}