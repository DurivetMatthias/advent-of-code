{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\n\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`& .${avatarClasses.root}`]: {\n      border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n      boxSizing: 'content-box',\n      marginLeft: -8,\n      '&:last-child': {\n        marginLeft: 0\n      }\n    },\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  };\n});\nconst AvatarGroupAvatar = styled(Avatar, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  };\n});\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n\n  const {\n    children: childrenProp,\n    className,\n    component = 'div',\n    componentsProps = {},\n    max = 5,\n    slotProps = {},\n    spacing = 'medium',\n    total,\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  let clampedMax = max < 2 ? 2 : max;\n\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsxs(AvatarGroupAvatar, _extends({\n      ownerState: ownerState,\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      style: _extends({\n        marginLeft\n      }, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.style),\n      children: [\"+\", extraAvatars]\n    })) : null, children.slice(0, maxAvatars).reverse().map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          // Consistent with \"&:last-child\" styling for the default spacing,\n          // we do not apply custom marginLeft spacing on the last child\n          marginLeft: index === maxAvatars - 1 ? undefined : marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","isFragment","clsx","chainPropTypes","unstable_composeClasses","composeClasses","styled","useThemeProps","Avatar","avatarClasses","avatarGroupClasses","getAvatarGroupUtilityClass","jsxs","_jsxs","SPACINGS","small","medium","useUtilityClasses","ownerState","classes","slots","root","avatar","AvatarGroupRoot","name","slot","overridesResolver","props","styles","theme","border","vars","palette","background","default","boxSizing","marginLeft","display","flexDirection","AvatarGroupAvatar","AvatarGroup","forwardRef","inProps","ref","_slotProps$additional","children","childrenProp","className","component","componentsProps","max","slotProps","spacing","total","variant","other","clampedMax","Children","toArray","filter","child","process","env","NODE_ENV","console","error","join","isValidElement","totalAvatars","length","Math","min","maxAvatars","extraAvatars","undefined","additionalAvatarSlotProps","additionalAvatar","as","style","slice","reverse","map","index","cloneElement","propTypes","node","object","string","elementType","shape","number","Error","oneOfType","oneOf","sx","arrayOf","func","bool"],"sources":["/Users/matthiasdurivet/Documents/advent-of-code/2022/14-viz/react-app/node_modules/@mui/material/AvatarGroup/AvatarGroup.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme\n}) => ({\n  [`& .${avatarClasses.root}`]: {\n    border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  },\n  display: 'flex',\n  flexDirection: 'row-reverse'\n}));\nconst AvatarGroupAvatar = styled(Avatar, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(({\n  theme\n}) => ({\n  border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n  boxSizing: 'content-box',\n  marginLeft: -8,\n  '&:last-child': {\n    marginLeft: 0\n  }\n}));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n      children: childrenProp,\n      className,\n      component = 'div',\n      componentsProps = {},\n      max = 5,\n      slotProps = {},\n      spacing = 'medium',\n      total,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsxs(AvatarGroupAvatar, _extends({\n      ownerState: ownerState,\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      style: _extends({\n        marginLeft\n      }, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.style),\n      children: [\"+\", extraAvatars]\n    })) : null, children.slice(0, maxAvatars).reverse().map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          // Consistent with \"&:last-child\" styling for the default spacing,\n          // we do not apply custom marginLeft spacing on the last child\n          marginLeft: index === maxAvatars - 1 ? undefined : marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;"],"mappings":"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"},"metadata":{},"sourceType":"module"}