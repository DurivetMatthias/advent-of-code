{"ast":null,"code":"/**\n * React Router v6.5.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, warning, resolveTo, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n\n\nfunction isPolyfill(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nconst is = typeof Object.is === \"function\" ? Object.is : isPolyfill; // Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\n\nconst {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useDebugValue\n} = React;\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore$2(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\"You are using an outdated, pre-release alpha of React 18 that \" + \"does not support useSyncExternalStore. The \" + \"use-sync-external-store shim will not work correctly. Upgrade \" + \"to a newer pre-release.\");\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  const value = getSnapshot();\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n\n      if (!is(value, cachedValue)) {\n        console.error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  const [{\n    inst\n  }, forceUpdate] = useState({\n    inst: {\n      value,\n      getSnapshot\n    }\n  }); // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [subscribe, value, getSnapshot]);\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    }\n\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n\nconst canUseDOM = !!(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore$2;\nconst useSyncExternalStore = \"useSyncExternalStore\" in React ? (module => module.useSyncExternalStore)(React) : shim; // Contexts for data routers\n\nconst DataStaticRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataStaticRouterContext.displayName = \"DataStaticRouterContext\";\n}\n\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\n\n\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\n\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\n\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\n\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\n\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\n\n\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history.  If this is a root navigation, then we\n    // navigate to the raw basename which allows the basename to have full\n    // control over the presence of a trailing slash on root links\n\n    if (basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\n\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\n\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\n\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\n\n\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\n\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterStateContext || undefined); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unhandled Thrown Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n    style: codeStyles\n  }, \"errorElement\"), \" props on\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n    style: codeStyles\n  }, \"<Route>\")));\n}\n\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    }) : this.props.children;\n  }\n\n}\n\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataStaticRouterContext = React.useContext(DataStaticRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataStaticRouterContext && match.route.errorElement) {\n    dataStaticRouterContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\n\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) {\n    if (dataRouterState != null && dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = dataRouterState == null ? void 0 : dataRouterState.errors;\n\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Could not find a matching route for the current errors: \" + errors) : invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = dataRouterState ? match.route.errorElement || /*#__PURE__*/React.createElement(DefaultErrorElement, null) : null;\n\n    let getChildren = () => /*#__PURE__*/React.createElement(RenderedRoute, {\n      match: match,\n      routeContext: {\n        outlet,\n        matches: parentMatches.concat(renderedMatches.slice(0, index + 1))\n      }\n    }, error ? errorElement : match.route.element !== undefined ? match.route.element : outlet); // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n\n\n    return dataRouterState && (match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      component: errorElement,\n      error: error,\n      children: getChildren()\n    }) : getChildren();\n  }, null);\n}\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return state;\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\n\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match; // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useLoaderData must be used inside a RouteContext\") : invariant(false) : void 0;\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useLoaderData can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  return state.loaderData[thisRoute.route.id];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useActionData must be used inside a RouteContext\") : invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\n\n\nfunction useRouteError() {\n  var _state$errors;\n\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let route = React.useContext(RouteContext);\n  let thisRoute = route.matches[route.matches.length - 1]; // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  }\n\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRouteError must be used inside a RouteContext\") : invariant(false) : void 0;\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRouteError can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0; // Otherwise look for errors from our data router state\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[thisRoute.route.id];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\n\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\n\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\n\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\n\n\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router\n  } = _ref; // Sync router state to our component state to force re-renders\n\n  let state = useSyncExternalStore(router.subscribe, () => router.state, // We have to provide this so React@18 doesn't complain during hydration,\n  // but we pass our serialized hydration data into the router so state here\n  // is already synced with what the server saw\n  () => router.state);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  return /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: {\n      router,\n      navigator,\n      static: false,\n      // Do we need this?\n      basename\n    }\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: router.basename,\n    location: router.state.location,\n    navigationType: router.state.historyAction,\n    navigator: navigator\n  }, router.state.initialized ? /*#__PURE__*/React.createElement(Routes, null) : fallbackElement)));\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\n\n\nfunction MemoryRouter(_ref2) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\n\n\nfunction Navigate(_ref3) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref3;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n\n    navigate(to, {\n      replace,\n      state,\n      relative\n    });\n  });\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\n\n\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\n\n\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false);\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\n\n\nfunction Router(_ref4) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref4;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (location == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location,\n      navigationType\n    }\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\n\n\nfunction Routes(_ref5) {\n  let {\n    children,\n    location\n  } = _ref5;\n  let dataRouterContext = React.useContext(DataRouterContext); // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n\n  let routes = dataRouterContext && !children ? dataRouterContext.router.routes : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\n\n\nfunction Await(_ref6) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref6;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\n\nvar AwaitRenderStatus;\n\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    } // Throw to the suspense boundary\n\n\n    throw promise;\n  }\n\n}\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\n\n\nfunction ResolveAwait(_ref7) {\n  let {\n    children\n  } = _ref7;\n  let data = useAsyncValue();\n\n  if (typeof children === \"function\") {\n    return children(data);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\n\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, parentPath));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"An index route cannot have child routes.\") : invariant(false) : void 0;\n    let treePath = [...parentPath, index];\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\n\n\nfunction enhanceManualRouteObjects(routes) {\n  return routes.map(route => {\n    let routeClone = _extends({}, route);\n\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n\n    return routeClone;\n  });\n}\n\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes: enhanceManualRouteObjects(routes)\n  }).initialize();\n} ///////////////////////////////////////////////////////////////////////////////\n\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, DataStaticRouterContext as UNSAFE_DataStaticRouterContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, enhanceManualRouteObjects as UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };","map":{"version":3,"mappings":"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","names":["isPolyfill","x","y","is","Object","useState","useEffect","useLayoutEffect","useDebugValue","React","didWarnOld18Alpha","didWarnUncachedGetSnapshot","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","process","console","error","value","cachedValue","inst","forceUpdate","checkIfSnapshotChanged","handleStoreChange","latestGetSnapshot","prevValue","nextValue","canUseDOM","window","document","createElement","isServerEnvironment","shim","server","client","module","DataStaticRouterContext","createContext","displayName","DataRouterContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","matches","RouteErrorContext","useHref","to","_temp","relative","useInRouterContext","invariant","basename","navigator","useContext","hash","pathname","search","useResolvedPath","joinedPathname","joinPaths","createHref","useLocation","location","useNavigationType","navigationType","useMatch","pattern","useMemo","matchPath","useNavigate","locationPathname","routePathnamesJson","JSON","stringify","getPathContributingMatches","map","match","pathnameBase","activeRef","useRef","current","navigate","useCallback","options","go","path","resolveTo","parse","replace","push","state","OutletContext","useOutletContext","useOutlet","context","Provider","useParams","routeMatch","length","params","_temp2","useRoutes","routes","locationArg","dataRouterStateContext","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","route","parentPath","warningOnce","endsWith","locationFromContext","parsedLocationArg","parsePath","startsWith","remainingPathname","slice","matchRoutes","element","undefined","renderedMatches","_renderMatches","assign","encodeLocation","key","NavigationType","Pop","DefaultErrorElement","useRouteError","message","isRouteErrorResponse","status","statusText","Error","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","style","fontStyle","RenderErrorBoundary","Component","constructor","props","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","children","component","RenderedRoute","_ref","routeContext","dataStaticRouterContext","errorElement","_deepestRenderedBoundaryId","id","dataRouterState","errors","errorIndex","findIndex","m","Math","min","reduceRight","index","getChildren","concat","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","useDataRouterState","useNavigation","UseNavigation","navigation","useRevalidator","dataRouterContext","UseRevalidator","revalidate","router","revalidation","useMatches","loaderData","UseMatches","data","handle","useLoaderData","UseLoaderData","thisRoute","useRouteLoaderData","routeId","UseRouteLoaderData","useActionData","UseActionData","values","actionData","UseRouteError","useAsyncValue","_data","useAsyncError","_error","alreadyWarned","cond","RouterProvider","fallbackElement","useSyncExternalStoreShim","n","opts","preventScrollReset","static","Router","historyAction","initialized","Routes","MemoryRouter","_ref2","initialEntries","initialIndex","historyRef","createMemoryHistory","v5Compat","history","setState","action","listen","Navigate","_ref3","Outlet","Route","_props","_ref4","basenameProp","locationProp","staticProp","navigationContext","trailingPathname","stripBasename","_ref5","createRoutesFromChildren","Await","_ref6","resolve","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","Promise","promise","pending","success","defineProperty","get","renderError","reject","catch","_tracked","then","AbortedDeferredError","_ref7","Children","forEach","isValidElement","type","Fragment","apply","name","treePath","join","caseSensitive","loader","hasErrorBoundary","shouldRevalidate","renderMatches","enhanceManualRouteObjects","routeClone","createMemoryRouter","createRouter","hydrationData","initialize"],"sources":["/Users/matthiasdurivet/Documents/advent-of-code/2022/14-viz/react-app/node_modules/react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimClient.ts","/Users/matthiasdurivet/Documents/advent-of-code/2022/14-viz/react-app/node_modules/react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimServer.ts","/Users/matthiasdurivet/Documents/advent-of-code/2022/14-viz/react-app/node_modules/react-router/lib/use-sync-external-store-shim/index.ts","/Users/matthiasdurivet/Documents/advent-of-code/2022/14-viz/react-app/node_modules/react-router/lib/context.ts","/Users/matthiasdurivet/Documents/advent-of-code/2022/14-viz/react-app/node_modules/react-router/lib/hooks.tsx","/Users/matthiasdurivet/Documents/advent-of-code/2022/14-viz/react-app/node_modules/react-router/lib/components.tsx","/Users/matthiasdurivet/Documents/advent-of-code/2022/14-viz/react-app/node_modules/react-router/index.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst { useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{ inst }, forceUpdate] = useState({ inst: { value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T\n): T {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n","/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport { useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport { useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? ((module) => module.useSyncExternalStore)(React)\n    : shim;\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\n// Contexts for data routers\nexport const DataStaticRouterContext =\n  React.createContext<StaticHandlerContext | null>(null);\nif (__DEV__) {\n  DataStaticRouterContext.displayName = \"DataStaticRouterContext\";\n}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  Router as RemixRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n  DataStaticRouterContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  return (\n    <>\n      <h2>Unhandled Thrown Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      <p>💿 Hey developer 👋</p>\n      <p>\n        You can provide a way better UX than this when your app throws errors by\n        providing your own&nbsp;\n        <code style={codeStyles}>errorElement</code> props on&nbsp;\n        <code style={codeStyles}>&lt;Route&gt;</code>\n      </p>\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteErrorContext.Provider\n        value={this.state.error}\n        children={this.props.component}\n      />\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataStaticRouterContext = React.useContext(DataStaticRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataStaticRouterContext && match.route.errorElement) {\n    dataStaticRouterContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = dataRouterState\n      ? match.route.errorElement || <DefaultErrorElement />\n      : null;\n    let getChildren = () => (\n      <RenderedRoute\n        match={match}\n        routeContext={{\n          outlet,\n          matches: parentMatches.concat(renderedMatches.slice(0, index + 1)),\n        }}\n      >\n        {error\n          ? errorElement\n          : match.route.element !== undefined\n          ? match.route.element\n          : outlet}\n      </RenderedRoute>\n    );\n    // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n    return dataRouterState && (match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseRevalidator = \"useRevalidator\",\n}\n\nenum DataRouterStateHook {\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useLoaderData must be used inside a RouteContext`);\n\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `useLoaderData can only be used on routes that contain a unique \"id\"`\n  );\n\n  return state.loaderData[thisRoute.route.id];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let route = React.useContext(RouteContext);\n  let thisRoute = route.matches[route.matches.length - 1];\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  invariant(route, `useRouteError must be used inside a RouteContext`);\n  invariant(\n    thisRoute.route.id,\n    `useRouteError can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[thisRoute.route.id];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  RouterState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  invariant,\n  parsePath,\n  stripBasename,\n  warning,\n} from \"@remix-run/router\";\nimport { useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    () => router.state,\n    // We have to provide this so React@18 doesn't complain during hydration,\n    // but we pass our serialized hydration data into the router so state here\n    // is already synced with what the server saw\n    () => router.state\n  );\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  return (\n    <DataRouterContext.Provider\n      value={{\n        router,\n        navigator,\n        static: false,\n        // Do we need this?\n        basename,\n      }}\n    >\n      <DataRouterStateContext.Provider value={state}>\n        <Router\n          basename={router.basename}\n          location={router.state.location}\n          navigationType={router.state.historyAction}\n          navigator={navigator}\n        >\n          {router.state.initialized ? <Routes /> : fallbackElement}\n        </Router>\n      </DataRouterStateContext.Provider>\n    </DataRouterContext.Provider>\n  );\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n    navigate(to, { replace, state, relative });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n  let routes =\n    dataRouterContext && !children\n      ? (dataRouterContext.router.routes as DataRouteObject[])\n      : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactElement;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  if (typeof children === \"function\") {\n    return children(data);\n  }\n  return <>{children}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, parentPath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let treePath = [...parentPath, index];\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\nexport function enhanceManualRouteObjects(\n  routes: RouteObject[]\n): RouteObject[] {\n  return routes.map((route) => {\n    let routeClone = { ...route };\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n    return routeClone;\n  });\n}\n","import type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n} from \"./lib/components\";\nimport {\n  enhanceManualRouteObjects,\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  RelativeRoutingType,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  DataStaticRouterContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  DataStaticRouterContext as UNSAFE_DataStaticRouterContext,\n  enhanceManualRouteObjects as UNSAFE_enhanceManualRouteObjects,\n};\n"]},"metadata":{},"sourceType":"module"}